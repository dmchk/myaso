#!/usr/bin/env ruby
# encoding: utf-8

require 'ostruct'
require 'optparse'

if File.exists? File.expand_path('../../.git', __FILE__)
  $LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)
end

require 'myaso'

options = OpenStruct.new

optparse = OptionParser.new do |opts|
  opts.banner = 'Usage: %s [options] command' % $PROGRAM_NAME

  opts.separator ''
  opts.separator 'Commands:'
  opts.separator '    tagger: run the HMM tagger'
  opts.separator '    console: start an IRB session'
  opts.separator ''
  opts.separator 'Options:'

  opts.on('-n', '--ngrams ngrams', 'Path to ngrams file for tagger') do |n|
    options.ngrams = n
  end

  opts.on('-l', '--lexicon lexicon', 'Path to lexicon file for tagger') do |l|
    options.lexicon = l
  end

  opts.on '-e', '--eval [code]', 'Evaluate the given line of code' do |e|
    options.eval = e
  end

  opts.on_tail '-h', '--help', 'Just display this help' do
    puts opts
    exit
  end

  opts.on_tail '-v', '--version', 'Just print the version infomation' do
    puts 'Myaso v%s' % Myaso::VERSION
    puts 'Copyright (c) 2010-2013 Dmitry Ustalov'
    exit
  end
end

optparse.parse!

eval(options.eval, binding, __FILE__, __LINE__) if options.eval

case ARGV.first
when 'tagger' then
  sentence = STDIN.readlines.map(&:chomp)

  STDERR.puts 'Training the tagger, this procedure is not so fast.'
  model = Myaso::Tagger::TnT.new(options.ngrams, options.lexicon)
  tagger = Myaso::Tagger.new(model)
  tags = tagger.annotate(sentence)

  sentence.zip(tags).each do |word, tag|
    puts "%s\t%s" % [word, tag]
  end
when 'console' then
  ARGV.clear
  include Myaso
  require 'irb'
  IRB.start
else
  puts optparse
  exit 1
end
